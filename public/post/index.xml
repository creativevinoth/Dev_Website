<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My website</title>
    <link>/post/</link>
    <description>Recent content in Posts on My website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DIamonds</title>
      <link>/2021/10/31/diamonds/</link>
      <pubDate>Sun, 31 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/10/31/diamonds/</guid>
      <description>MBA6636_SM21_Professor_Proposes_Data&amp;lt;-read.csv(&amp;quot;C:/Users/Vinoth Kanna/OneDrive/Documents/Data Analytics/Final/MBA6636_SM21_Professor_Proposes_Data.csv&amp;quot;)for(i in 1:length(MBA6636_SM21_Professor_Proposes_Data$Colour)){if (MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;D&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;E&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;F&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Colour[i]=&amp;quot;Colorless&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;G&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;H&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;I&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Colour[i]=&amp;quot;Near Colorless&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;J&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;K&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Colour[i]=&amp;quot;Faint Yellow&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;L&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;M&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;N&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Colour[i]=&amp;quot;Very Light Yellow&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;O&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;P&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;Q&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;R&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;S&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Colour[i]=&amp;quot;Light Yellow&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;T&amp;quot; || MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;U&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;V&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;W&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;X&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;Y&amp;quot;|| MBA6636_SM21_Professor_Proposes_Data$Colour[i]==&amp;quot;Z&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Colour[i]=&amp;quot;Yellow&amp;quot;}}for(i in 1:length(MBA6636_SM21_Professor_Proposes_Data$Clarity)) {if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;I1&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;very few inclusions visible to naked eye&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;I2&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;few inclusions visible to naked eye&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;SI1&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;very very few inclusions at 10X&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;SI2&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;very few inclusions at 10X&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;SI3&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;several inclusions at 10X&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;VS1&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;few inclusions at 30X&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;VS2&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;several inclusions at 30X&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;VVS1&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;very very few inclusions at 30X&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Clarity[i]==&amp;quot;VVS2&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Clarity[i]=&amp;quot;very few inclusions at 30X&amp;quot;}}for(i in 1:length(MBA6636_SM21_Professor_Proposes_Data$Cut)) {if (MBA6636_SM21_Professor_Proposes_Data$Cut[i]==&amp;quot;F&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Cut[i]=&amp;quot;Fair&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Cut[i]==&amp;quot;G&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Cut[i]=&amp;quot;Good&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Cut[i]==&amp;quot;I&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Cut[i]=&amp;quot;Ideal&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Cut[i]==&amp;quot;V&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Cut[i]=&amp;quot;Very Good&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Cut[i]==&amp;quot;X&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Cut[i]=&amp;quot;Excellent&amp;quot;}}for(i in 1:length(MBA6636_SM21_Professor_Proposes_Data$Polish)){if (MBA6636_SM21_Professor_Proposes_Data$Polish[i]==&amp;quot;F&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Polish[i]=&amp;quot;Fair&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Polish[i]==&amp;quot;G&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Polish[i]=&amp;quot;Good&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Polish[i]==&amp;quot;I&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Polish[i]=&amp;quot;Ideal&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Polish[i]==&amp;quot;V&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Polish[i]=&amp;quot;Very Good&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Polish[i]==&amp;quot;X&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Polish[i]=&amp;quot;Excellent&amp;quot;}}for(i in 1:length(MBA6636_SM21_Professor_Proposes_Data$Symmetry)) {if (MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]==&amp;quot;F&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]=&amp;quot;Fair&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]==&amp;quot;G&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]=&amp;quot;Good&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]==&amp;quot;I&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]=&amp;quot;Ideal&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]==&amp;quot;V&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]=&amp;quot;Very Good&amp;quot;}else if (MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]==&amp;quot;X&amp;quot;) {MBA6636_SM21_Professor_Proposes_Data$Symmetry[i]=&amp;quot;Excellent&amp;quot;}}The report of the predicted price of a diamond for the professorTable of contentsExecutive summaryIssues and challangesUnivariate analysis on metric and non metric dataBivariate analysis on metric and non metric dataMultiple linear regresionObservations and commentsExecutive summaryA professor is looking for an engagement ring.</description>
    </item>
    
    <item>
      <title>My first post</title>
      <link>/2021/10/30/my-first-post/</link>
      <pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/10/30/my-first-post/</guid>
      <description>library(ggplot2)library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionlibrary(data.table)## ## Attaching package: &amp;#39;data.table&amp;#39;## The following objects are masked from &amp;#39;package:dplyr&amp;#39;:## ## between, first, lastlibrary(tidyr)library(GGally)## Registered S3 method overwritten by &amp;#39;GGally&amp;#39;:## method from ## +.gg ggplot2library(gapminder)library(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.</description>
    </item>
    
  </channel>
</rss>
